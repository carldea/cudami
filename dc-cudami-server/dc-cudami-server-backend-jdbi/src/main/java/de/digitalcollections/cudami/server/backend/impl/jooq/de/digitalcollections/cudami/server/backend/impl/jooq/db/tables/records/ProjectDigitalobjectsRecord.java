/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.ProjectDigitalobjects;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProjectDigitalobjectsRecord extends UpdatableRecordImpl<ProjectDigitalobjectsRecord>
    implements Record3<UUID, UUID, Integer> {

  private static final long serialVersionUID = -718693845;

  /** Setter for <code>public.project_digitalobjects.project_uuid</code>. */
  public void setProjectUuid(UUID value) {
    set(0, value);
  }

  /** Getter for <code>public.project_digitalobjects.project_uuid</code>. */
  public UUID getProjectUuid() {
    return (UUID) get(0);
  }

  /** Setter for <code>public.project_digitalobjects.digitalobject_uuid</code>. */
  public void setDigitalobjectUuid(UUID value) {
    set(1, value);
  }

  /** Getter for <code>public.project_digitalobjects.digitalobject_uuid</code>. */
  public UUID getDigitalobjectUuid() {
    return (UUID) get(1);
  }

  /** Setter for <code>public.project_digitalobjects.sortindex</code>. */
  public void setSortindex(Integer value) {
    set(2, value);
  }

  /** Getter for <code>public.project_digitalobjects.sortindex</code>. */
  public Integer getSortindex() {
    return (Integer) get(2);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record2<UUID, UUID> key() {
    return (Record2) super.key();
  }

  // -------------------------------------------------------------------------
  // Record3 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row3<UUID, UUID, Integer> fieldsRow() {
    return (Row3) super.fieldsRow();
  }

  @Override
  public Row3<UUID, UUID, Integer> valuesRow() {
    return (Row3) super.valuesRow();
  }

  @Override
  public Field<UUID> field1() {
    return ProjectDigitalobjects.PROJECT_DIGITALOBJECTS.PROJECT_UUID;
  }

  @Override
  public Field<UUID> field2() {
    return ProjectDigitalobjects.PROJECT_DIGITALOBJECTS.DIGITALOBJECT_UUID;
  }

  @Override
  public Field<Integer> field3() {
    return ProjectDigitalobjects.PROJECT_DIGITALOBJECTS.SORTINDEX;
  }

  @Override
  public UUID component1() {
    return getProjectUuid();
  }

  @Override
  public UUID component2() {
    return getDigitalobjectUuid();
  }

  @Override
  public Integer component3() {
    return getSortindex();
  }

  @Override
  public UUID value1() {
    return getProjectUuid();
  }

  @Override
  public UUID value2() {
    return getDigitalobjectUuid();
  }

  @Override
  public Integer value3() {
    return getSortindex();
  }

  @Override
  public ProjectDigitalobjectsRecord value1(UUID value) {
    setProjectUuid(value);
    return this;
  }

  @Override
  public ProjectDigitalobjectsRecord value2(UUID value) {
    setDigitalobjectUuid(value);
    return this;
  }

  @Override
  public ProjectDigitalobjectsRecord value3(Integer value) {
    setSortindex(value);
    return this;
  }

  @Override
  public ProjectDigitalobjectsRecord values(UUID value1, UUID value2, Integer value3) {
    value1(value1);
    value2(value2);
    value3(value3);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached ProjectDigitalobjectsRecord */
  public ProjectDigitalobjectsRecord() {
    super(ProjectDigitalobjects.PROJECT_DIGITALOBJECTS);
  }

  /** Create a detached, initialised ProjectDigitalobjectsRecord */
  public ProjectDigitalobjectsRecord(UUID projectUuid, UUID digitalobjectUuid, Integer sortindex) {
    super(ProjectDigitalobjects.PROJECT_DIGITALOBJECTS);

    set(0, projectUuid);
    set(1, digitalobjectUuid);
    set(2, sortindex);
  }
}
