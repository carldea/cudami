/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.Identifiertypes;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class IdentifiertypesRecord extends UpdatableRecordImpl<IdentifiertypesRecord>
    implements Record4<String, String, String, UUID> {

  private static final long serialVersionUID = -54137078;

  /** Setter for <code>public.identifiertypes.label</code>. */
  public void setLabel(String value) {
    set(0, value);
  }

  /** Getter for <code>public.identifiertypes.label</code>. */
  public String getLabel() {
    return (String) get(0);
  }

  /** Setter for <code>public.identifiertypes.namespace</code>. */
  public void setNamespace(String value) {
    set(1, value);
  }

  /** Getter for <code>public.identifiertypes.namespace</code>. */
  public String getNamespace() {
    return (String) get(1);
  }

  /** Setter for <code>public.identifiertypes.pattern</code>. */
  public void setPattern(String value) {
    set(2, value);
  }

  /** Getter for <code>public.identifiertypes.pattern</code>. */
  public String getPattern() {
    return (String) get(2);
  }

  /** Setter for <code>public.identifiertypes.uuid</code>. */
  public void setUuid(UUID value) {
    set(3, value);
  }

  /** Getter for <code>public.identifiertypes.uuid</code>. */
  public UUID getUuid() {
    return (UUID) get(3);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<UUID> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row4<String, String, String, UUID> fieldsRow() {
    return (Row4) super.fieldsRow();
  }

  @Override
  public Row4<String, String, String, UUID> valuesRow() {
    return (Row4) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return Identifiertypes.IDENTIFIERTYPES.LABEL;
  }

  @Override
  public Field<String> field2() {
    return Identifiertypes.IDENTIFIERTYPES.NAMESPACE;
  }

  @Override
  public Field<String> field3() {
    return Identifiertypes.IDENTIFIERTYPES.PATTERN;
  }

  @Override
  public Field<UUID> field4() {
    return Identifiertypes.IDENTIFIERTYPES.UUID;
  }

  @Override
  public String component1() {
    return getLabel();
  }

  @Override
  public String component2() {
    return getNamespace();
  }

  @Override
  public String component3() {
    return getPattern();
  }

  @Override
  public UUID component4() {
    return getUuid();
  }

  @Override
  public String value1() {
    return getLabel();
  }

  @Override
  public String value2() {
    return getNamespace();
  }

  @Override
  public String value3() {
    return getPattern();
  }

  @Override
  public UUID value4() {
    return getUuid();
  }

  @Override
  public IdentifiertypesRecord value1(String value) {
    setLabel(value);
    return this;
  }

  @Override
  public IdentifiertypesRecord value2(String value) {
    setNamespace(value);
    return this;
  }

  @Override
  public IdentifiertypesRecord value3(String value) {
    setPattern(value);
    return this;
  }

  @Override
  public IdentifiertypesRecord value4(UUID value) {
    setUuid(value);
    return this;
  }

  @Override
  public IdentifiertypesRecord values(String value1, String value2, String value3, UUID value4) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached IdentifiertypesRecord */
  public IdentifiertypesRecord() {
    super(Identifiertypes.IDENTIFIERTYPES);
  }

  /** Create a detached, initialised IdentifiertypesRecord */
  public IdentifiertypesRecord(String label, String namespace, String pattern, UUID uuid) {
    super(Identifiertypes.IDENTIFIERTYPES);

    set(0, label);
    set(1, namespace);
    set(2, pattern);
    set(3, uuid);
  }
}
