/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.Keys;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.Public;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records.FileresourcesAudioRecord;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FileresourcesAudio extends TableImpl<FileresourcesAudioRecord> {

  private static final long serialVersionUID = 1305288701;

  /** The reference instance of <code>public.fileresources_audio</code> */
  public static final FileresourcesAudio FILERESOURCES_AUDIO = new FileresourcesAudio();

  /** The class holding records for this type */
  @Override
  public Class<FileresourcesAudioRecord> getRecordType() {
    return FileresourcesAudioRecord.class;
  }

  /** The column <code>public.fileresources_audio.uuid</code>. */
  public final TableField<FileresourcesAudioRecord, UUID> UUID =
      createField(DSL.name("uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** The column <code>public.fileresources_audio.created</code>. */
  public final TableField<FileresourcesAudioRecord, LocalDateTime> CREATED =
      createField(
          DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

  /** The column <code>public.fileresources_audio.description</code>. */
  public final TableField<FileresourcesAudioRecord, JSONB> DESCRIPTION =
      createField(DSL.name("description"), org.jooq.impl.SQLDataType.JSONB, this, "");

  /** The column <code>public.fileresources_audio.identifiable_type</code>. */
  public final TableField<FileresourcesAudioRecord, String> IDENTIFIABLE_TYPE =
      createField(
          DSL.name("identifiable_type"),
          org.jooq.impl.SQLDataType.VARCHAR.nullable(false),
          this,
          "");

  /** The column <code>public.fileresources_audio.label</code>. */
  public final TableField<FileresourcesAudioRecord, JSONB> LABEL =
      createField(DSL.name("label"), org.jooq.impl.SQLDataType.JSONB.nullable(false), this, "");

  /** The column <code>public.fileresources_audio.last_modified</code>. */
  public final TableField<FileresourcesAudioRecord, LocalDateTime> LAST_MODIFIED =
      createField(
          DSL.name("last_modified"),
          org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false),
          this,
          "");

  /** The column <code>public.fileresources_audio.filename</code>. */
  public final TableField<FileresourcesAudioRecord, String> FILENAME =
      createField(
          DSL.name("filename"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

  /** The column <code>public.fileresources_audio.mimetype</code>. */
  public final TableField<FileresourcesAudioRecord, String> MIMETYPE =
      createField(
          DSL.name("mimetype"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

  /** The column <code>public.fileresources_audio.size_in_bytes</code>. */
  public final TableField<FileresourcesAudioRecord, Long> SIZE_IN_BYTES =
      createField(
          DSL.name("size_in_bytes"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

  /** The column <code>public.fileresources_audio.uri</code>. */
  public final TableField<FileresourcesAudioRecord, String> URI =
      createField(DSL.name("uri"), org.jooq.impl.SQLDataType.CLOB, this, "");

  /** The column <code>public.fileresources_audio.duration</code>. */
  public final TableField<FileresourcesAudioRecord, Integer> DURATION =
      createField(DSL.name("duration"), org.jooq.impl.SQLDataType.INTEGER, this, "");

  /** The column <code>public.fileresources_audio.previewfileresource</code>. */
  public final TableField<FileresourcesAudioRecord, UUID> PREVIEWFILERESOURCE =
      createField(DSL.name("previewfileresource"), org.jooq.impl.SQLDataType.UUID, this, "");

  /** The column <code>public.fileresources_audio.preview_hints</code>. */
  public final TableField<FileresourcesAudioRecord, JSONB> PREVIEW_HINTS =
      createField(DSL.name("preview_hints"), org.jooq.impl.SQLDataType.JSONB, this, "");

  /** The column <code>public.fileresources_audio.http_base_url</code>. */
  public final TableField<FileresourcesAudioRecord, String> HTTP_BASE_URL =
      createField(DSL.name("http_base_url"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

  /** Create a <code>public.fileresources_audio</code> table reference */
  public FileresourcesAudio() {
    this(DSL.name("fileresources_audio"), null);
  }

  /** Create an aliased <code>public.fileresources_audio</code> table reference */
  public FileresourcesAudio(String alias) {
    this(DSL.name(alias), FILERESOURCES_AUDIO);
  }

  /** Create an aliased <code>public.fileresources_audio</code> table reference */
  public FileresourcesAudio(Name alias) {
    this(alias, FILERESOURCES_AUDIO);
  }

  private FileresourcesAudio(Name alias, Table<FileresourcesAudioRecord> aliased) {
    this(alias, aliased, null);
  }

  private FileresourcesAudio(
      Name alias, Table<FileresourcesAudioRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  public <O extends Record> FileresourcesAudio(
      Table<O> child, ForeignKey<O, FileresourcesAudioRecord> key) {
    super(child, key, FILERESOURCES_AUDIO);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public UniqueKey<FileresourcesAudioRecord> getPrimaryKey() {
    return Keys.NEW_FILERESOURCES_AUDIO_PKEY;
  }

  @Override
  public List<UniqueKey<FileresourcesAudioRecord>> getKeys() {
    return Arrays.<UniqueKey<FileresourcesAudioRecord>>asList(Keys.NEW_FILERESOURCES_AUDIO_PKEY);
  }

  @Override
  public FileresourcesAudio as(String alias) {
    return new FileresourcesAudio(DSL.name(alias), this);
  }

  @Override
  public FileresourcesAudio as(Name alias) {
    return new FileresourcesAudio(alias, this);
  }

  /** Rename this table */
  @Override
  public FileresourcesAudio rename(String name) {
    return new FileresourcesAudio(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public FileresourcesAudio rename(Name name) {
    return new FileresourcesAudio(name, null);
  }

  // -------------------------------------------------------------------------
  // Row14 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row14<
          UUID,
          LocalDateTime,
          JSONB,
          String,
          JSONB,
          LocalDateTime,
          String,
          String,
          Long,
          String,
          Integer,
          UUID,
          JSONB,
          String>
      fieldsRow() {
    return (Row14) super.fieldsRow();
  }
}
