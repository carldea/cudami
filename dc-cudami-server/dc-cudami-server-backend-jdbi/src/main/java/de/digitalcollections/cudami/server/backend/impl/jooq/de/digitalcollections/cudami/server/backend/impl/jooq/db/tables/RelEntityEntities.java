/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.Keys;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.Public;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records.RelEntityEntitiesRecord;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RelEntityEntities extends TableImpl<RelEntityEntitiesRecord> {

  private static final long serialVersionUID = 2087459451;

  /** The reference instance of <code>public.rel_entity_entities</code> */
  public static final RelEntityEntities REL_ENTITY_ENTITIES = new RelEntityEntities();

  /** The class holding records for this type */
  @Override
  public Class<RelEntityEntitiesRecord> getRecordType() {
    return RelEntityEntitiesRecord.class;
  }

  /** The column <code>public.rel_entity_entities.subject_uuid</code>. */
  public final TableField<RelEntityEntitiesRecord, UUID> SUBJECT_UUID =
      createField(
          DSL.name("subject_uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** The column <code>public.rel_entity_entities.predicate</code>. */
  public final TableField<RelEntityEntitiesRecord, String> PREDICATE =
      createField(
          DSL.name("predicate"), org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "");

  /** The column <code>public.rel_entity_entities.object_uuid</code>. */
  public final TableField<RelEntityEntitiesRecord, UUID> OBJECT_UUID =
      createField(
          DSL.name("object_uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** Create a <code>public.rel_entity_entities</code> table reference */
  public RelEntityEntities() {
    this(DSL.name("rel_entity_entities"), null);
  }

  /** Create an aliased <code>public.rel_entity_entities</code> table reference */
  public RelEntityEntities(String alias) {
    this(DSL.name(alias), REL_ENTITY_ENTITIES);
  }

  /** Create an aliased <code>public.rel_entity_entities</code> table reference */
  public RelEntityEntities(Name alias) {
    this(alias, REL_ENTITY_ENTITIES);
  }

  private RelEntityEntities(Name alias, Table<RelEntityEntitiesRecord> aliased) {
    this(alias, aliased, null);
  }

  private RelEntityEntities(
      Name alias, Table<RelEntityEntitiesRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  public <O extends Record> RelEntityEntities(
      Table<O> child, ForeignKey<O, RelEntityEntitiesRecord> key) {
    super(child, key, REL_ENTITY_ENTITIES);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public UniqueKey<RelEntityEntitiesRecord> getPrimaryKey() {
    return Keys.REL_ENTITY_ENTITIES_PKEY;
  }

  @Override
  public List<UniqueKey<RelEntityEntitiesRecord>> getKeys() {
    return Arrays.<UniqueKey<RelEntityEntitiesRecord>>asList(Keys.REL_ENTITY_ENTITIES_PKEY);
  }

  @Override
  public List<ForeignKey<RelEntityEntitiesRecord, ?>> getReferences() {
    return Arrays.<ForeignKey<RelEntityEntitiesRecord, ?>>asList(
        Keys.REL_ENTITY_ENTITIES__FK_PREDICATE_PREDICATES);
  }

  public Predicates predicates() {
    return new Predicates(this, Keys.REL_ENTITY_ENTITIES__FK_PREDICATE_PREDICATES);
  }

  @Override
  public RelEntityEntities as(String alias) {
    return new RelEntityEntities(DSL.name(alias), this);
  }

  @Override
  public RelEntityEntities as(Name alias) {
    return new RelEntityEntities(alias, this);
  }

  /** Rename this table */
  @Override
  public RelEntityEntities rename(String name) {
    return new RelEntityEntities(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public RelEntityEntities rename(Name name) {
    return new RelEntityEntities(name, null);
  }

  // -------------------------------------------------------------------------
  // Row3 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row3<UUID, String, UUID> fieldsRow() {
    return (Row3) super.fieldsRow();
  }
}
