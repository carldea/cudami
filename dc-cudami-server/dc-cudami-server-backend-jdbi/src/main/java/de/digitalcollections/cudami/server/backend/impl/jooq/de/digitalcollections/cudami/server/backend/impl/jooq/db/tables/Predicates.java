/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.Keys;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.Public;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records.PredicatesRecord;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Predicates extends TableImpl<PredicatesRecord> {

  private static final long serialVersionUID = 1748569386;

  /** The reference instance of <code>public.predicates</code> */
  public static final Predicates PREDICATES = new Predicates();

  /** The class holding records for this type */
  @Override
  public Class<PredicatesRecord> getRecordType() {
    return PredicatesRecord.class;
  }

  /** The column <code>public.predicates.value</code>. */
  public final TableField<PredicatesRecord, String> VALUE =
      createField(DSL.name("value"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

  /** The column <code>public.predicates.label</code>. */
  public final TableField<PredicatesRecord, JSONB> LABEL =
      createField(DSL.name("label"), org.jooq.impl.SQLDataType.JSONB, this, "");

  /** The column <code>public.predicates.description</code>. */
  public final TableField<PredicatesRecord, JSONB> DESCRIPTION =
      createField(DSL.name("description"), org.jooq.impl.SQLDataType.JSONB, this, "");

  /** The column <code>public.predicates.created</code>. */
  public final TableField<PredicatesRecord, LocalDateTime> CREATED =
      createField(
          DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

  /** The column <code>public.predicates.last_modified</code>. */
  public final TableField<PredicatesRecord, LocalDateTime> LAST_MODIFIED =
      createField(
          DSL.name("last_modified"),
          org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false),
          this,
          "");

  /** Create a <code>public.predicates</code> table reference */
  public Predicates() {
    this(DSL.name("predicates"), null);
  }

  /** Create an aliased <code>public.predicates</code> table reference */
  public Predicates(String alias) {
    this(DSL.name(alias), PREDICATES);
  }

  /** Create an aliased <code>public.predicates</code> table reference */
  public Predicates(Name alias) {
    this(alias, PREDICATES);
  }

  private Predicates(Name alias, Table<PredicatesRecord> aliased) {
    this(alias, aliased, null);
  }

  private Predicates(Name alias, Table<PredicatesRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  public <O extends Record> Predicates(Table<O> child, ForeignKey<O, PredicatesRecord> key) {
    super(child, key, PREDICATES);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public UniqueKey<PredicatesRecord> getPrimaryKey() {
    return Keys.PREDICATES_PKEY;
  }

  @Override
  public List<UniqueKey<PredicatesRecord>> getKeys() {
    return Arrays.<UniqueKey<PredicatesRecord>>asList(Keys.PREDICATES_PKEY);
  }

  @Override
  public Predicates as(String alias) {
    return new Predicates(DSL.name(alias), this);
  }

  @Override
  public Predicates as(Name alias) {
    return new Predicates(alias, this);
  }

  /** Rename this table */
  @Override
  public Predicates rename(String name) {
    return new Predicates(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public Predicates rename(Name name) {
    return new Predicates(name, null);
  }

  // -------------------------------------------------------------------------
  // Row5 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row5<String, JSONB, JSONB, LocalDateTime, LocalDateTime> fieldsRow() {
    return (Row5) super.fieldsRow();
  }
}
