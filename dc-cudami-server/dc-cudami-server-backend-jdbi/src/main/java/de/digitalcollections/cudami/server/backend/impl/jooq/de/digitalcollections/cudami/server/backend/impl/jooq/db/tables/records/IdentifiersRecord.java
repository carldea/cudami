/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.Identifiers;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class IdentifiersRecord extends UpdatableRecordImpl<IdentifiersRecord>
    implements Record4<UUID, UUID, String, String> {

  private static final long serialVersionUID = -735244070;

  /** Setter for <code>public.identifiers.uuid</code>. */
  public void setUuid(UUID value) {
    set(0, value);
  }

  /** Getter for <code>public.identifiers.uuid</code>. */
  public UUID getUuid() {
    return (UUID) get(0);
  }

  /** Setter for <code>public.identifiers.identifiable</code>. */
  public void setIdentifiable(UUID value) {
    set(1, value);
  }

  /** Getter for <code>public.identifiers.identifiable</code>. */
  public UUID getIdentifiable() {
    return (UUID) get(1);
  }

  /** Setter for <code>public.identifiers.namespace</code>. */
  public void setNamespace(String value) {
    set(2, value);
  }

  /** Getter for <code>public.identifiers.namespace</code>. */
  public String getNamespace() {
    return (String) get(2);
  }

  /** Setter for <code>public.identifiers.identifier</code>. */
  public void setIdentifier(String value) {
    set(3, value);
  }

  /** Getter for <code>public.identifiers.identifier</code>. */
  public String getIdentifier() {
    return (String) get(3);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<UUID> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row4<UUID, UUID, String, String> fieldsRow() {
    return (Row4) super.fieldsRow();
  }

  @Override
  public Row4<UUID, UUID, String, String> valuesRow() {
    return (Row4) super.valuesRow();
  }

  @Override
  public Field<UUID> field1() {
    return Identifiers.IDENTIFIERS.UUID;
  }

  @Override
  public Field<UUID> field2() {
    return Identifiers.IDENTIFIERS.IDENTIFIABLE;
  }

  @Override
  public Field<String> field3() {
    return Identifiers.IDENTIFIERS.NAMESPACE;
  }

  @Override
  public Field<String> field4() {
    return Identifiers.IDENTIFIERS.IDENTIFIER;
  }

  @Override
  public UUID component1() {
    return getUuid();
  }

  @Override
  public UUID component2() {
    return getIdentifiable();
  }

  @Override
  public String component3() {
    return getNamespace();
  }

  @Override
  public String component4() {
    return getIdentifier();
  }

  @Override
  public UUID value1() {
    return getUuid();
  }

  @Override
  public UUID value2() {
    return getIdentifiable();
  }

  @Override
  public String value3() {
    return getNamespace();
  }

  @Override
  public String value4() {
    return getIdentifier();
  }

  @Override
  public IdentifiersRecord value1(UUID value) {
    setUuid(value);
    return this;
  }

  @Override
  public IdentifiersRecord value2(UUID value) {
    setIdentifiable(value);
    return this;
  }

  @Override
  public IdentifiersRecord value3(String value) {
    setNamespace(value);
    return this;
  }

  @Override
  public IdentifiersRecord value4(String value) {
    setIdentifier(value);
    return this;
  }

  @Override
  public IdentifiersRecord values(UUID value1, UUID value2, String value3, String value4) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached IdentifiersRecord */
  public IdentifiersRecord() {
    super(Identifiers.IDENTIFIERS);
  }

  /** Create a detached, initialised IdentifiersRecord */
  public IdentifiersRecord(UUID uuid, UUID identifiable, String namespace, String identifier) {
    super(Identifiers.IDENTIFIERS);

    set(0, uuid);
    set(1, identifiable);
    set(2, namespace);
    set(3, identifier);
  }
}
