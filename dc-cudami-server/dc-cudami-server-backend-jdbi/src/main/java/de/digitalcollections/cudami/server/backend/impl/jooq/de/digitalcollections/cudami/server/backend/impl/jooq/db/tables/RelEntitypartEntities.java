/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.Keys;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.Public;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records.RelEntitypartEntitiesRecord;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RelEntitypartEntities extends TableImpl<RelEntitypartEntitiesRecord> {

  private static final long serialVersionUID = -660199405;

  /** The reference instance of <code>public.rel_entitypart_entities</code> */
  public static final RelEntitypartEntities REL_ENTITYPART_ENTITIES = new RelEntitypartEntities();

  /** The class holding records for this type */
  @Override
  public Class<RelEntitypartEntitiesRecord> getRecordType() {
    return RelEntitypartEntitiesRecord.class;
  }

  /** The column <code>public.rel_entitypart_entities.entitypart_uuid</code>. */
  public final TableField<RelEntitypartEntitiesRecord, UUID> ENTITYPART_UUID =
      createField(
          DSL.name("entitypart_uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** The column <code>public.rel_entitypart_entities.entity_uuid</code>. */
  public final TableField<RelEntitypartEntitiesRecord, UUID> ENTITY_UUID =
      createField(
          DSL.name("entity_uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** The column <code>public.rel_entitypart_entities.sortindex</code>. */
  public final TableField<RelEntitypartEntitiesRecord, Short> SORTINDEX =
      createField(DSL.name("sortindex"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

  /** Create a <code>public.rel_entitypart_entities</code> table reference */
  public RelEntitypartEntities() {
    this(DSL.name("rel_entitypart_entities"), null);
  }

  /** Create an aliased <code>public.rel_entitypart_entities</code> table reference */
  public RelEntitypartEntities(String alias) {
    this(DSL.name(alias), REL_ENTITYPART_ENTITIES);
  }

  /** Create an aliased <code>public.rel_entitypart_entities</code> table reference */
  public RelEntitypartEntities(Name alias) {
    this(alias, REL_ENTITYPART_ENTITIES);
  }

  private RelEntitypartEntities(Name alias, Table<RelEntitypartEntitiesRecord> aliased) {
    this(alias, aliased, null);
  }

  private RelEntitypartEntities(
      Name alias, Table<RelEntitypartEntitiesRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  public <O extends Record> RelEntitypartEntities(
      Table<O> child, ForeignKey<O, RelEntitypartEntitiesRecord> key) {
    super(child, key, REL_ENTITYPART_ENTITIES);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public UniqueKey<RelEntitypartEntitiesRecord> getPrimaryKey() {
    return Keys.REL_ENTITYPART_ENTITIES_PKEY;
  }

  @Override
  public List<UniqueKey<RelEntitypartEntitiesRecord>> getKeys() {
    return Arrays.<UniqueKey<RelEntitypartEntitiesRecord>>asList(Keys.REL_ENTITYPART_ENTITIES_PKEY);
  }

  @Override
  public RelEntitypartEntities as(String alias) {
    return new RelEntitypartEntities(DSL.name(alias), this);
  }

  @Override
  public RelEntitypartEntities as(Name alias) {
    return new RelEntitypartEntities(alias, this);
  }

  /** Rename this table */
  @Override
  public RelEntitypartEntities rename(String name) {
    return new RelEntitypartEntities(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public RelEntitypartEntities rename(Name name) {
    return new RelEntitypartEntities(name, null);
  }

  // -------------------------------------------------------------------------
  // Row3 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row3<UUID, UUID, Short> fieldsRow() {
    return (Row3) super.fieldsRow();
  }
}
