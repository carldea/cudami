/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.Keys;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.Public;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records.WebpageWebpagesRecord;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class WebpageWebpages extends TableImpl<WebpageWebpagesRecord> {

  private static final long serialVersionUID = -804448280;

  /** The reference instance of <code>public.webpage_webpages</code> */
  public static final WebpageWebpages WEBPAGE_WEBPAGES = new WebpageWebpages();

  /** The class holding records for this type */
  @Override
  public Class<WebpageWebpagesRecord> getRecordType() {
    return WebpageWebpagesRecord.class;
  }

  /** The column <code>public.webpage_webpages.parent_webpage_uuid</code>. */
  public final TableField<WebpageWebpagesRecord, UUID> PARENT_WEBPAGE_UUID =
      createField(
          DSL.name("parent_webpage_uuid"),
          org.jooq.impl.SQLDataType.UUID.nullable(false),
          this,
          "");

  /** The column <code>public.webpage_webpages.child_webpage_uuid</code>. */
  public final TableField<WebpageWebpagesRecord, UUID> CHILD_WEBPAGE_UUID =
      createField(
          DSL.name("child_webpage_uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** The column <code>public.webpage_webpages.sortindex</code>. */
  public final TableField<WebpageWebpagesRecord, Short> SORTINDEX =
      createField(DSL.name("sortindex"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

  /** Create a <code>public.webpage_webpages</code> table reference */
  public WebpageWebpages() {
    this(DSL.name("webpage_webpages"), null);
  }

  /** Create an aliased <code>public.webpage_webpages</code> table reference */
  public WebpageWebpages(String alias) {
    this(DSL.name(alias), WEBPAGE_WEBPAGES);
  }

  /** Create an aliased <code>public.webpage_webpages</code> table reference */
  public WebpageWebpages(Name alias) {
    this(alias, WEBPAGE_WEBPAGES);
  }

  private WebpageWebpages(Name alias, Table<WebpageWebpagesRecord> aliased) {
    this(alias, aliased, null);
  }

  private WebpageWebpages(Name alias, Table<WebpageWebpagesRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  public <O extends Record> WebpageWebpages(
      Table<O> child, ForeignKey<O, WebpageWebpagesRecord> key) {
    super(child, key, WEBPAGE_WEBPAGES);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public UniqueKey<WebpageWebpagesRecord> getPrimaryKey() {
    return Keys.NEW_WEBPAGE_WEBPAGES_PKEY;
  }

  @Override
  public List<UniqueKey<WebpageWebpagesRecord>> getKeys() {
    return Arrays.<UniqueKey<WebpageWebpagesRecord>>asList(
        Keys.NEW_WEBPAGE_WEBPAGES_PKEY, Keys.NEW_WEBPAGE_WEBPAGES_CHILD_WEBPAGE_UUID_KEY);
  }

  @Override
  public List<ForeignKey<WebpageWebpagesRecord, ?>> getReferences() {
    return Arrays.<ForeignKey<WebpageWebpagesRecord, ?>>asList(
        Keys.WEBPAGE_WEBPAGES__NEW_WEBPAGE_WEBPAGES_PARENT_WEBPAGE_UUID_FKEY,
        Keys.WEBPAGE_WEBPAGES__NEW_WEBPAGE_WEBPAGES_CHILD_WEBPAGE_UUID_FKEY);
  }

  public Webpages newWebpageWebpagesParentWebpageUuidFkey() {
    return new Webpages(this, Keys.WEBPAGE_WEBPAGES__NEW_WEBPAGE_WEBPAGES_PARENT_WEBPAGE_UUID_FKEY);
  }

  public Webpages newWebpageWebpagesChildWebpageUuidFkey() {
    return new Webpages(this, Keys.WEBPAGE_WEBPAGES__NEW_WEBPAGE_WEBPAGES_CHILD_WEBPAGE_UUID_FKEY);
  }

  @Override
  public WebpageWebpages as(String alias) {
    return new WebpageWebpages(DSL.name(alias), this);
  }

  @Override
  public WebpageWebpages as(Name alias) {
    return new WebpageWebpages(alias, this);
  }

  /** Rename this table */
  @Override
  public WebpageWebpages rename(String name) {
    return new WebpageWebpages(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public WebpageWebpages rename(Name name) {
    return new WebpageWebpages(name, null);
  }

  // -------------------------------------------------------------------------
  // Row3 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row3<UUID, UUID, Short> fieldsRow() {
    return (Row3) super.fieldsRow();
  }
}
