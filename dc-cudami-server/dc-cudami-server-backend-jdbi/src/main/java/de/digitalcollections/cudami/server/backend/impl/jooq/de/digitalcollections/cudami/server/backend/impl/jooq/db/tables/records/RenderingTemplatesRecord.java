/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.RenderingTemplates;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RenderingTemplatesRecord extends UpdatableRecordImpl<RenderingTemplatesRecord>
    implements Record4<UUID, JSONB, JSONB, String> {

  private static final long serialVersionUID = -1423992209;

  /** Setter for <code>public.rendering_templates.uuid</code>. */
  public void setUuid(UUID value) {
    set(0, value);
  }

  /** Getter for <code>public.rendering_templates.uuid</code>. */
  public UUID getUuid() {
    return (UUID) get(0);
  }

  /** Setter for <code>public.rendering_templates.description</code>. */
  public void setDescription(JSONB value) {
    set(1, value);
  }

  /** Getter for <code>public.rendering_templates.description</code>. */
  public JSONB getDescription() {
    return (JSONB) get(1);
  }

  /** Setter for <code>public.rendering_templates.label</code>. */
  public void setLabel(JSONB value) {
    set(2, value);
  }

  /** Getter for <code>public.rendering_templates.label</code>. */
  public JSONB getLabel() {
    return (JSONB) get(2);
  }

  /** Setter for <code>public.rendering_templates.name</code>. */
  public void setName(String value) {
    set(3, value);
  }

  /** Getter for <code>public.rendering_templates.name</code>. */
  public String getName() {
    return (String) get(3);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<UUID> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row4<UUID, JSONB, JSONB, String> fieldsRow() {
    return (Row4) super.fieldsRow();
  }

  @Override
  public Row4<UUID, JSONB, JSONB, String> valuesRow() {
    return (Row4) super.valuesRow();
  }

  @Override
  public Field<UUID> field1() {
    return RenderingTemplates.RENDERING_TEMPLATES.UUID;
  }

  @Override
  public Field<JSONB> field2() {
    return RenderingTemplates.RENDERING_TEMPLATES.DESCRIPTION;
  }

  @Override
  public Field<JSONB> field3() {
    return RenderingTemplates.RENDERING_TEMPLATES.LABEL;
  }

  @Override
  public Field<String> field4() {
    return RenderingTemplates.RENDERING_TEMPLATES.NAME;
  }

  @Override
  public UUID component1() {
    return getUuid();
  }

  @Override
  public JSONB component2() {
    return getDescription();
  }

  @Override
  public JSONB component3() {
    return getLabel();
  }

  @Override
  public String component4() {
    return getName();
  }

  @Override
  public UUID value1() {
    return getUuid();
  }

  @Override
  public JSONB value2() {
    return getDescription();
  }

  @Override
  public JSONB value3() {
    return getLabel();
  }

  @Override
  public String value4() {
    return getName();
  }

  @Override
  public RenderingTemplatesRecord value1(UUID value) {
    setUuid(value);
    return this;
  }

  @Override
  public RenderingTemplatesRecord value2(JSONB value) {
    setDescription(value);
    return this;
  }

  @Override
  public RenderingTemplatesRecord value3(JSONB value) {
    setLabel(value);
    return this;
  }

  @Override
  public RenderingTemplatesRecord value4(String value) {
    setName(value);
    return this;
  }

  @Override
  public RenderingTemplatesRecord values(UUID value1, JSONB value2, JSONB value3, String value4) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached RenderingTemplatesRecord */
  public RenderingTemplatesRecord() {
    super(RenderingTemplates.RENDERING_TEMPLATES);
  }

  /** Create a detached, initialised RenderingTemplatesRecord */
  public RenderingTemplatesRecord(UUID uuid, JSONB description, JSONB label, String name) {
    super(RenderingTemplates.RENDERING_TEMPLATES);

    set(0, uuid);
    set(1, description);
    set(2, label);
    set(3, name);
  }
}
