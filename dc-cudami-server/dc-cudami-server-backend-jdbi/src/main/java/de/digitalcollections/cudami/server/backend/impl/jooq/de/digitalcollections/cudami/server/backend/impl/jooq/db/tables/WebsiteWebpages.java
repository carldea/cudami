/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.Keys;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.Public;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records.WebsiteWebpagesRecord;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class WebsiteWebpages extends TableImpl<WebsiteWebpagesRecord> {

  private static final long serialVersionUID = -774476057;

  /** The reference instance of <code>public.website_webpages</code> */
  public static final WebsiteWebpages WEBSITE_WEBPAGES = new WebsiteWebpages();

  /** The class holding records for this type */
  @Override
  public Class<WebsiteWebpagesRecord> getRecordType() {
    return WebsiteWebpagesRecord.class;
  }

  /** The column <code>public.website_webpages.website_uuid</code>. */
  public final TableField<WebsiteWebpagesRecord, UUID> WEBSITE_UUID =
      createField(
          DSL.name("website_uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** The column <code>public.website_webpages.webpage_uuid</code>. */
  public final TableField<WebsiteWebpagesRecord, UUID> WEBPAGE_UUID =
      createField(
          DSL.name("webpage_uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** The column <code>public.website_webpages.sortindex</code>. */
  public final TableField<WebsiteWebpagesRecord, Short> SORTINDEX =
      createField(DSL.name("sortindex"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

  /** Create a <code>public.website_webpages</code> table reference */
  public WebsiteWebpages() {
    this(DSL.name("website_webpages"), null);
  }

  /** Create an aliased <code>public.website_webpages</code> table reference */
  public WebsiteWebpages(String alias) {
    this(DSL.name(alias), WEBSITE_WEBPAGES);
  }

  /** Create an aliased <code>public.website_webpages</code> table reference */
  public WebsiteWebpages(Name alias) {
    this(alias, WEBSITE_WEBPAGES);
  }

  private WebsiteWebpages(Name alias, Table<WebsiteWebpagesRecord> aliased) {
    this(alias, aliased, null);
  }

  private WebsiteWebpages(Name alias, Table<WebsiteWebpagesRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  public <O extends Record> WebsiteWebpages(
      Table<O> child, ForeignKey<O, WebsiteWebpagesRecord> key) {
    super(child, key, WEBSITE_WEBPAGES);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public UniqueKey<WebsiteWebpagesRecord> getPrimaryKey() {
    return Keys.NEW_WEBSITE_WEBPAGES_PKEY;
  }

  @Override
  public List<UniqueKey<WebsiteWebpagesRecord>> getKeys() {
    return Arrays.<UniqueKey<WebsiteWebpagesRecord>>asList(
        Keys.NEW_WEBSITE_WEBPAGES_PKEY, Keys.NEW_WEBSITE_WEBPAGES_WEBPAGE_UUID_KEY);
  }

  @Override
  public List<ForeignKey<WebsiteWebpagesRecord, ?>> getReferences() {
    return Arrays.<ForeignKey<WebsiteWebpagesRecord, ?>>asList(
        Keys.WEBSITE_WEBPAGES__NEW_WEBSITE_WEBPAGES_WEBSITE_UUID_FKEY,
        Keys.WEBSITE_WEBPAGES__NEW_WEBSITE_WEBPAGES_WEBPAGE_UUID_FKEY);
  }

  public Websites websites() {
    return new Websites(this, Keys.WEBSITE_WEBPAGES__NEW_WEBSITE_WEBPAGES_WEBSITE_UUID_FKEY);
  }

  public Webpages webpages() {
    return new Webpages(this, Keys.WEBSITE_WEBPAGES__NEW_WEBSITE_WEBPAGES_WEBPAGE_UUID_FKEY);
  }

  @Override
  public WebsiteWebpages as(String alias) {
    return new WebsiteWebpages(DSL.name(alias), this);
  }

  @Override
  public WebsiteWebpages as(Name alias) {
    return new WebsiteWebpages(alias, this);
  }

  /** Rename this table */
  @Override
  public WebsiteWebpages rename(String name) {
    return new WebsiteWebpages(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public WebsiteWebpages rename(Name name) {
    return new WebsiteWebpages(name, null);
  }

  // -------------------------------------------------------------------------
  // Row3 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row3<UUID, UUID, Short> fieldsRow() {
    return (Row3) super.fieldsRow();
  }
}
