/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.Keys;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.Public;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records.DigitalobjectFileresourcesRecord;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DigitalobjectFileresources extends TableImpl<DigitalobjectFileresourcesRecord> {

  private static final long serialVersionUID = 70355388;

  /** The reference instance of <code>public.digitalobject_fileresources</code> */
  public static final DigitalobjectFileresources DIGITALOBJECT_FILERESOURCES =
      new DigitalobjectFileresources();

  /** The class holding records for this type */
  @Override
  public Class<DigitalobjectFileresourcesRecord> getRecordType() {
    return DigitalobjectFileresourcesRecord.class;
  }

  /** The column <code>public.digitalobject_fileresources.digitalobject_uuid</code>. */
  public final TableField<DigitalobjectFileresourcesRecord, UUID> DIGITALOBJECT_UUID =
      createField(
          DSL.name("digitalobject_uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** The column <code>public.digitalobject_fileresources.fileresource_uuid</code>. */
  public final TableField<DigitalobjectFileresourcesRecord, UUID> FILERESOURCE_UUID =
      createField(
          DSL.name("fileresource_uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** The column <code>public.digitalobject_fileresources.sortindex</code>. */
  public final TableField<DigitalobjectFileresourcesRecord, Short> SORTINDEX =
      createField(DSL.name("sortindex"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

  /** Create a <code>public.digitalobject_fileresources</code> table reference */
  public DigitalobjectFileresources() {
    this(DSL.name("digitalobject_fileresources"), null);
  }

  /** Create an aliased <code>public.digitalobject_fileresources</code> table reference */
  public DigitalobjectFileresources(String alias) {
    this(DSL.name(alias), DIGITALOBJECT_FILERESOURCES);
  }

  /** Create an aliased <code>public.digitalobject_fileresources</code> table reference */
  public DigitalobjectFileresources(Name alias) {
    this(alias, DIGITALOBJECT_FILERESOURCES);
  }

  private DigitalobjectFileresources(Name alias, Table<DigitalobjectFileresourcesRecord> aliased) {
    this(alias, aliased, null);
  }

  private DigitalobjectFileresources(
      Name alias, Table<DigitalobjectFileresourcesRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  public <O extends Record> DigitalobjectFileresources(
      Table<O> child, ForeignKey<O, DigitalobjectFileresourcesRecord> key) {
    super(child, key, DIGITALOBJECT_FILERESOURCES);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public UniqueKey<DigitalobjectFileresourcesRecord> getPrimaryKey() {
    return Keys.NEW_DIGITALOBJECT_FILERESOURCES_PKEY;
  }

  @Override
  public List<UniqueKey<DigitalobjectFileresourcesRecord>> getKeys() {
    return Arrays.<UniqueKey<DigitalobjectFileresourcesRecord>>asList(
        Keys.NEW_DIGITALOBJECT_FILERESOURCES_PKEY,
        Keys.NEW_DIGITALOBJECT_FILERESOURCES_FILERESOURCE_UUID_KEY);
  }

  @Override
  public List<ForeignKey<DigitalobjectFileresourcesRecord, ?>> getReferences() {
    return Arrays.<ForeignKey<DigitalobjectFileresourcesRecord, ?>>asList(
        Keys.DIGITALOBJECT_FILERESOURCES__NEW_DIGITALOBJECT_FILERESOURCES_DIGITALOBJECT_UUID_FKEY);
  }

  public Digitalobjects digitalobjects() {
    return new Digitalobjects(
        this,
        Keys.DIGITALOBJECT_FILERESOURCES__NEW_DIGITALOBJECT_FILERESOURCES_DIGITALOBJECT_UUID_FKEY);
  }

  @Override
  public DigitalobjectFileresources as(String alias) {
    return new DigitalobjectFileresources(DSL.name(alias), this);
  }

  @Override
  public DigitalobjectFileresources as(Name alias) {
    return new DigitalobjectFileresources(alias, this);
  }

  /** Rename this table */
  @Override
  public DigitalobjectFileresources rename(String name) {
    return new DigitalobjectFileresources(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public DigitalobjectFileresources rename(Name name) {
    return new DigitalobjectFileresources(name, null);
  }

  // -------------------------------------------------------------------------
  // Row3 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row3<UUID, UUID, Short> fieldsRow() {
    return (Row3) super.fieldsRow();
  }
}
