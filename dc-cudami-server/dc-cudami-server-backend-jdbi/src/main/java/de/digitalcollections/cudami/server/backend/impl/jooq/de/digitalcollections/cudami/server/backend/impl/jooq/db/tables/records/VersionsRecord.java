/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.Versions;
import java.time.LocalDate;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class VersionsRecord extends UpdatableRecordImpl<VersionsRecord>
    implements Record8<UUID, Integer, String, LocalDate, String, String, String, String> {

  private static final long serialVersionUID = 131788245;

  /** Setter for <code>public.versions.uuid</code>. */
  public void setUuid(UUID value) {
    set(0, value);
  }

  /** Getter for <code>public.versions.uuid</code>. */
  public UUID getUuid() {
    return (UUID) get(0);
  }

  /** Setter for <code>public.versions.version_value</code>. */
  public void setVersionValue(Integer value) {
    set(1, value);
  }

  /** Getter for <code>public.versions.version_value</code>. */
  public Integer getVersionValue() {
    return (Integer) get(1);
  }

  /** Setter for <code>public.versions.description</code>. */
  public void setDescription(String value) {
    set(2, value);
  }

  /** Getter for <code>public.versions.description</code>. */
  public String getDescription() {
    return (String) get(2);
  }

  /** Setter for <code>public.versions.created</code>. */
  public void setCreated(LocalDate value) {
    set(3, value);
  }

  /** Getter for <code>public.versions.created</code>. */
  public LocalDate getCreated() {
    return (LocalDate) get(3);
  }

  /** Setter for <code>public.versions.type_key</code>. */
  public void setTypeKey(String value) {
    set(4, value);
  }

  /** Getter for <code>public.versions.type_key</code>. */
  public String getTypeKey() {
    return (String) get(4);
  }

  /** Setter for <code>public.versions.instance_key</code>. */
  public void setInstanceKey(String value) {
    set(5, value);
  }

  /** Getter for <code>public.versions.instance_key</code>. */
  public String getInstanceKey() {
    return (String) get(5);
  }

  /** Setter for <code>public.versions.instance_version_key</code>. */
  public void setInstanceVersionKey(String value) {
    set(6, value);
  }

  /** Getter for <code>public.versions.instance_version_key</code>. */
  public String getInstanceVersionKey() {
    return (String) get(6);
  }

  /** Setter for <code>public.versions.status</code>. */
  public void setStatus(String value) {
    set(7, value);
  }

  /** Getter for <code>public.versions.status</code>. */
  public String getStatus() {
    return (String) get(7);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<UUID> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record8 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row8<UUID, Integer, String, LocalDate, String, String, String, String> fieldsRow() {
    return (Row8) super.fieldsRow();
  }

  @Override
  public Row8<UUID, Integer, String, LocalDate, String, String, String, String> valuesRow() {
    return (Row8) super.valuesRow();
  }

  @Override
  public Field<UUID> field1() {
    return Versions.VERSIONS.UUID;
  }

  @Override
  public Field<Integer> field2() {
    return Versions.VERSIONS.VERSION_VALUE;
  }

  @Override
  public Field<String> field3() {
    return Versions.VERSIONS.DESCRIPTION;
  }

  @Override
  public Field<LocalDate> field4() {
    return Versions.VERSIONS.CREATED;
  }

  @Override
  public Field<String> field5() {
    return Versions.VERSIONS.TYPE_KEY;
  }

  @Override
  public Field<String> field6() {
    return Versions.VERSIONS.INSTANCE_KEY;
  }

  @Override
  public Field<String> field7() {
    return Versions.VERSIONS.INSTANCE_VERSION_KEY;
  }

  @Override
  public Field<String> field8() {
    return Versions.VERSIONS.STATUS;
  }

  @Override
  public UUID component1() {
    return getUuid();
  }

  @Override
  public Integer component2() {
    return getVersionValue();
  }

  @Override
  public String component3() {
    return getDescription();
  }

  @Override
  public LocalDate component4() {
    return getCreated();
  }

  @Override
  public String component5() {
    return getTypeKey();
  }

  @Override
  public String component6() {
    return getInstanceKey();
  }

  @Override
  public String component7() {
    return getInstanceVersionKey();
  }

  @Override
  public String component8() {
    return getStatus();
  }

  @Override
  public UUID value1() {
    return getUuid();
  }

  @Override
  public Integer value2() {
    return getVersionValue();
  }

  @Override
  public String value3() {
    return getDescription();
  }

  @Override
  public LocalDate value4() {
    return getCreated();
  }

  @Override
  public String value5() {
    return getTypeKey();
  }

  @Override
  public String value6() {
    return getInstanceKey();
  }

  @Override
  public String value7() {
    return getInstanceVersionKey();
  }

  @Override
  public String value8() {
    return getStatus();
  }

  @Override
  public VersionsRecord value1(UUID value) {
    setUuid(value);
    return this;
  }

  @Override
  public VersionsRecord value2(Integer value) {
    setVersionValue(value);
    return this;
  }

  @Override
  public VersionsRecord value3(String value) {
    setDescription(value);
    return this;
  }

  @Override
  public VersionsRecord value4(LocalDate value) {
    setCreated(value);
    return this;
  }

  @Override
  public VersionsRecord value5(String value) {
    setTypeKey(value);
    return this;
  }

  @Override
  public VersionsRecord value6(String value) {
    setInstanceKey(value);
    return this;
  }

  @Override
  public VersionsRecord value7(String value) {
    setInstanceVersionKey(value);
    return this;
  }

  @Override
  public VersionsRecord value8(String value) {
    setStatus(value);
    return this;
  }

  @Override
  public VersionsRecord values(
      UUID value1,
      Integer value2,
      String value3,
      LocalDate value4,
      String value5,
      String value6,
      String value7,
      String value8) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    value7(value7);
    value8(value8);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached VersionsRecord */
  public VersionsRecord() {
    super(Versions.VERSIONS);
  }

  /** Create a detached, initialised VersionsRecord */
  public VersionsRecord(
      UUID uuid,
      Integer versionValue,
      String description,
      LocalDate created,
      String typeKey,
      String instanceKey,
      String instanceVersionKey,
      String status) {
    super(Versions.VERSIONS);

    set(0, uuid);
    set(1, versionValue);
    set(2, description);
    set(3, created);
    set(4, typeKey);
    set(5, instanceKey);
    set(6, instanceVersionKey);
    set(7, status);
  }
}
