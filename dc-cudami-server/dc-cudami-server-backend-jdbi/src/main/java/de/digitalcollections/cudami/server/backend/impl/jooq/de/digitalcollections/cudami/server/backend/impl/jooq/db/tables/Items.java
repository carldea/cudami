/*
 * This file is generated by jOOQ.
 */
package de.digitalcollections.cudami.server.backend.impl.jooq.db.tables;

import de.digitalcollections.cudami.server.backend.impl.jooq.db.Keys;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.Public;
import de.digitalcollections.cudami.server.backend.impl.jooq.db.tables.records.ItemsRecord;
import java.time.LocalDateTime;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Items extends TableImpl<ItemsRecord> {

  private static final long serialVersionUID = -547744020;

  /** The reference instance of <code>public.items</code> */
  public static final Items ITEMS = new Items();

  /** The class holding records for this type */
  @Override
  public Class<ItemsRecord> getRecordType() {
    return ItemsRecord.class;
  }

  /** The column <code>public.items.uuid</code>. */
  public final TableField<ItemsRecord, UUID> UUID =
      createField(DSL.name("uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

  /** The column <code>public.items.created</code>. */
  public final TableField<ItemsRecord, LocalDateTime> CREATED =
      createField(
          DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

  /** The column <code>public.items.description</code>. */
  public final TableField<ItemsRecord, JSONB> DESCRIPTION =
      createField(DSL.name("description"), org.jooq.impl.SQLDataType.JSONB, this, "");

  /** The column <code>public.items.identifiable_type</code>. */
  public final TableField<ItemsRecord, String> IDENTIFIABLE_TYPE =
      createField(
          DSL.name("identifiable_type"),
          org.jooq.impl.SQLDataType.VARCHAR.nullable(false),
          this,
          "");

  /** The column <code>public.items.label</code>. */
  public final TableField<ItemsRecord, JSONB> LABEL =
      createField(DSL.name("label"), org.jooq.impl.SQLDataType.JSONB.nullable(false), this, "");

  /** The column <code>public.items.last_modified</code>. */
  public final TableField<ItemsRecord, LocalDateTime> LAST_MODIFIED =
      createField(
          DSL.name("last_modified"),
          org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false),
          this,
          "");

  /** The column <code>public.items.entity_type</code>. */
  public final TableField<ItemsRecord, String> ENTITY_TYPE =
      createField(
          DSL.name("entity_type"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

  /** The column <code>public.items.refid</code>. */
  public final TableField<ItemsRecord, Integer> REFID =
      createField(
          DSL.name("refid"),
          org.jooq.impl.SQLDataType.INTEGER
              .nullable(false)
              .defaultValue(
                  org.jooq.impl.DSL.field(
                      "nextval('entities_refid_seq'::regclass)",
                      org.jooq.impl.SQLDataType.INTEGER)),
          this,
          "");

  /** The column <code>public.items.previewfileresource</code>. */
  public final TableField<ItemsRecord, UUID> PREVIEWFILERESOURCE =
      createField(DSL.name("previewfileresource"), org.jooq.impl.SQLDataType.UUID, this, "");

  /** The column <code>public.items.preview_hints</code>. */
  public final TableField<ItemsRecord, JSONB> PREVIEW_HINTS =
      createField(DSL.name("preview_hints"), org.jooq.impl.SQLDataType.JSONB, this, "");

  /** The column <code>public.items.language</code>. */
  public final TableField<ItemsRecord, String> LANGUAGE =
      createField(DSL.name("language"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

  /** The column <code>public.items.publication_date</code>. */
  public final TableField<ItemsRecord, String> PUBLICATION_DATE =
      createField(DSL.name("publication_date"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

  /** The column <code>public.items.publication_place</code>. */
  public final TableField<ItemsRecord, String> PUBLICATION_PLACE =
      createField(DSL.name("publication_place"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

  /** The column <code>public.items.publisher</code>. */
  public final TableField<ItemsRecord, String> PUBLISHER =
      createField(DSL.name("publisher"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

  /** The column <code>public.items.version</code>. */
  public final TableField<ItemsRecord, String> VERSION =
      createField(DSL.name("version"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

  /** The column <code>public.items.custom_attrs</code>. */
  public final TableField<ItemsRecord, JSONB> CUSTOM_ATTRS =
      createField(DSL.name("custom_attrs"), org.jooq.impl.SQLDataType.JSONB, this, "");

  /** Create a <code>public.items</code> table reference */
  public Items() {
    this(DSL.name("items"), null);
  }

  /** Create an aliased <code>public.items</code> table reference */
  public Items(String alias) {
    this(DSL.name(alias), ITEMS);
  }

  /** Create an aliased <code>public.items</code> table reference */
  public Items(Name alias) {
    this(alias, ITEMS);
  }

  private Items(Name alias, Table<ItemsRecord> aliased) {
    this(alias, aliased, null);
  }

  private Items(Name alias, Table<ItemsRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  public <O extends Record> Items(Table<O> child, ForeignKey<O, ItemsRecord> key) {
    super(child, key, ITEMS);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public Identity<ItemsRecord, Integer> getIdentity() {
    return Keys.IDENTITY_ITEMS;
  }

  @Override
  public Items as(String alias) {
    return new Items(DSL.name(alias), this);
  }

  @Override
  public Items as(Name alias) {
    return new Items(alias, this);
  }

  /** Rename this table */
  @Override
  public Items rename(String name) {
    return new Items(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public Items rename(Name name) {
    return new Items(name, null);
  }

  // -------------------------------------------------------------------------
  // Row16 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row16<
          UUID,
          LocalDateTime,
          JSONB,
          String,
          JSONB,
          LocalDateTime,
          String,
          Integer,
          UUID,
          JSONB,
          String,
          String,
          String,
          String,
          String,
          JSONB>
      fieldsRow() {
    return (Row16) super.fieldsRow();
  }
}
